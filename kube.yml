---
- hosts: workers
  tasks:



  - name: Disable SELinux step#2
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.lineinfile:
      path: /etc/selinux/config
      regexp: '^SELINUX='
      line: SELINUX=disabled

  - name: Enable the br_netfilter module for cluster communication
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: modprobe br_netfilter && echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

  - name: disable swap step1
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: swapoff -a

  - name: disable swap step2
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.lineinfile:
      path: /etc/fstab
      regexp: '^/root'
      line: '#/root/swap swap swap sw 0 0'

  - name: Install the Docker prerequisites yum-utils.
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: yum-utils

  - name: Install the Docker prerequisites device-mapper-persistent-data.
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: device-mapper-persistent-data

  - name: Install the Docker prerequisites lvm2.
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: lvm2

  - name: Config repo Docker
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: 'yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo'

  - name: Install Docker engine
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: docker-ce
      state: latest

  - name: Cgroup Driver configuration
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: "sed -i '/^ExecStart/ s/$/ --exec-opt native.cgroupdriver=systemd/' /usr/lib/systemd/system/docker.service"

  - name: Daemon reload
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Docker enabled
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.systemd:
      name: docker
      enabled: yes
      
  - name: restart docker service 
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.systemd:
      state: started
      name: docker

  - name: Congig repo kube
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.copy:
      src: /home/{{cloud_user}}/kube.repo
      dest: /etc/yum.repos.d/kubernetes.repo

  - name: Install kubelet
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: kubelet-1.20.0-0

  - name: Install kubeadm
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: kubeadm-1.20.0-0

  - name: Install kubectl
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    yum:
      name: kubectl-1.20.0-0

  - name: kubelet enabled
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    ansible.builtin.systemd:
      name: kubelet
      enabled: yes

- hosts: master
  tasks:

  - name: Create .kube directory
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: 'mkdir /home/cloud_user/.kube'

  - name: kubeadm init
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: 'kubeadm init --pod-network-cidr=10.2.0.0/21'

  - name: kubeadm print token step1
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: 'kubeadm token create --print-join-command > /home/cloud_user/token'
      
  - name: kubeadm print token step2
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: 'echo $(cat /home/cloud_user/token) --experimental-control-plane > /tmp/join'
      
  - name: fetch token from first master
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    fetch:
      src: /tmp/join
      dest: /tmp/join

  - name: copy kubectl config file
    become: yes
    remote_user: "{{cloud_user}}"
    become_method: sudo
    shell:
      cmd: 'cp /etc/kubernetes/admin.conf /home/cloud_user/.kube && chown cloud_user:cloud_user /home/cloud_user/.kube/admin.conf'
  
  - name: Download Calicoctl
    become: yes
    remote_user: "{{cloud_user}}"
    get_url:
      url: https://github.com/projectcalico/calicoctl/releases/download/v3.21.2/calicoctl 
      dest: /home/{{cloud_user}}/calicoctl
      validate_certs: false     
 
     
      
  - name: Download Calico resources
    become: yes
    remote_user: "{{cloud_user}}"
    get_url:
      url: https://docs.projectcalico.org/archive/v3.21/manifests/calico.yaml
      dest: /home/{{cloud_user}}/calico.yaml
      validate_certs: false
